// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// u_index
IntegerVector u_index(int nz, IntegerVector zd);
RcppExport SEXP _htsr_u_index(SEXP nzSEXP, SEXP zdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nz(nzSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type zd(zdSEXP);
    rcpp_result_gen = Rcpp::wrap(u_index(nz, zd));
    return rcpp_result_gen;
END_RCPP
}
// u_timestep
NumericVector u_timestep(int te, IntegerVector yd, NumericVector yv, int tst, int iop);
RcppExport SEXP _htsr_u_timestep(SEXP teSEXP, SEXP ydSEXP, SEXP yvSEXP, SEXP tstSEXP, SEXP iopSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type te(teSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type yd(ydSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yv(yvSEXP);
    Rcpp::traits::input_parameter< int >::type tst(tstSEXP);
    Rcpp::traits::input_parameter< int >::type iop(iopSEXP);
    rcpp_result_gen = Rcpp::wrap(u_timestep(te, yd, yv, tst, iop));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_htsr_u_index", (DL_FUNC) &_htsr_u_index, 2},
    {"_htsr_u_timestep", (DL_FUNC) &_htsr_u_timestep, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_htsr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
